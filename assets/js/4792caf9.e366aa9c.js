"use strict";(self.webpackChunkknowledge_core=self.webpackChunkknowledge_core||[]).push([[106],{7905:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var o=n(4848),s=n(8453);const i={sidebar_position:4,title:"PDF to HTML",sidebar_label:"PDF to HTML"},r=void 0,l={id:"essential-dev-utils/scripts/pdf-to-html",title:"PDF to HTML",description:"Converting PDF to HTML on macOS",source:"@site/docs/essential-dev-utils/scripts/pdf-to-html.md",sourceDirName:"essential-dev-utils/scripts",slug:"/essential-dev-utils/scripts/pdf-to-html",permalink:"/knowledge-core/docs/essential-dev-utils/scripts/pdf-to-html",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/essential-dev-utils/scripts/pdf-to-html.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"PDF to HTML",sidebar_label:"PDF to HTML"},sidebar:"tutorialSidebar",previous:{title:"Password Generator",permalink:"/knowledge-core/docs/essential-dev-utils/scripts/password_generator"},next:{title:"HTML to PDF",permalink:"/knowledge-core/docs/essential-dev-utils/scripts/html-to-pdf"}},a={},d=[{value:"Converting PDF to HTML on macOS",id:"converting-pdf-to-html-on-macos",level:2},{value:"Explanation",id:"explanation",level:3},{value:"Python Implementation",id:"python-implementation",level:3}];function c(e){const t={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"converting-pdf-to-html-on-macos",children:"Converting PDF to HTML on macOS"}),"\n",(0,o.jsxs)(t.p,{children:["To convert a PDF file to HTML format on macOS, it is necessary to install the required tools using Homebrew. The following commands will install ",(0,o.jsx)(t.code,{children:"pdftohtml"})," and its dependencies:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"brew install pdftohtml\nbrew install poppler\n"})}),"\n",(0,o.jsx)(t.h3,{id:"explanation",children:"Explanation"}),"\n",(0,o.jsx)(t.p,{children:"This section outlines how to convert a PDF file into HTML format and subsequently generate a PDF from an HTML document. The process utilizes command-line tools and Python libraries to achieve these tasks."}),"\n",(0,o.jsxs)(t.p,{children:["The conversion from PDF to HTML is accomplished using the ",(0,o.jsx)(t.code,{children:"pdftohtml"})," command, which allows users to preserve image quality, include hidden text, and create a single HTML file without using frames. The Python script checks if the PDF file exists before attempting the conversion and provides appropriate error handling."]}),"\n",(0,o.jsx)(t.h3,{id:"python-implementation",children:"Python Implementation"}),"\n",(0,o.jsxs)(t.p,{children:["The following Python code demonstrates how to convert a PDF file to HTML using the ",(0,o.jsx)(t.code,{children:"pdftohtml"})," command-line tool. It includes error handling to ensure that the input file exists before attempting the conversion."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"import subprocess\nimport os\n\ndef pdf_to_html(pdf_path, output_html):\n    # Check if the PDF file exists\n    if not os.path.isfile(pdf_path):\n        raise FileNotFoundError(f\"File not found: {pdf_path}\")\n\n    # Command to convert PDF to HTML\n    command = [\n        'pdftohtml',  # Command\n        '-c',         # Retain image quality\n        '-hidden',    # Include hidden text\n        '-s',         # Create a single HTML file\n        '-noframes',  # Do not use frames\n        pdf_path,     # Input PDF path\n        output_html   # Output HTML file path\n    ]\n\n    try:\n        # Execute the command\n        subprocess.run(command, check=True)\n        print(f\"Conversion completed! HTML saved at: {output_html}\")\n    except subprocess.CalledProcessError as e:\n        print(f\"An error occurred during the conversion: {e}\")\n\n# Example usage\npdf_file = 'input.pdf'          # Change this to the path of your PDF file\noutput_file = 'output.html'     # Change this to your desired output path\n\npdf_to_html(pdf_file, output_file)\n"})})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var o=n(6540);const s={},i=o.createContext(s);function r(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);