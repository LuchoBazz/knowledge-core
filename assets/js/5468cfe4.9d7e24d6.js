"use strict";(self.webpackChunkknowledge_core=self.webpackChunkknowledge_core||[]).push([[4682],{653:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var t=s(4848),i=s(8453);const o={sidebar_position:1,title:"Typescript Language",sidebar_label:"Typescript"},r=void 0,a={id:"essential-dev-utils/languages/typescript",title:"Typescript Language",description:"Using Jest Spy Instances for Testing",source:"@site/docs/essential-dev-utils/languages/typescript.md",sourceDirName:"essential-dev-utils/languages",slug:"/essential-dev-utils/languages/typescript",permalink:"/knowledge-core/docs/essential-dev-utils/languages/typescript",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/essential-dev-utils/languages/typescript.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Typescript Language",sidebar_label:"Typescript"},sidebar:"tutorialSidebar",previous:{title:"Programming Languages",permalink:"/knowledge-core/docs/category/programming-languages"},next:{title:"Python",permalink:"/knowledge-core/docs/essential-dev-utils/languages/python"}},c={},l=[{value:"Using Jest Spy Instances for Testing",id:"using-jest-spy-instances-for-testing",level:2},{value:"Explanation",id:"explanation",level:3},{value:"Benefits",id:"benefits",level:3}];function d(e){const n={br:"br",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"using-jest-spy-instances-for-testing",children:"Using Jest Spy Instances for Testing"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'let spy: jest.SpyInstance;\n\nbeforeEach(() => {\n  spy = jest\n    .spyOn(someModule, "someMethod")\n    .mockImplementation(defaultValue);\n});\n\nafterEach(() => {\n  spy.mockRestore();\n});\n'})}),"\n",(0,t.jsx)(n.h3,{id:"explanation",children:"Explanation"}),"\n",(0,t.jsx)(n.p,{children:"This code snippet demonstrates how to use Jest's spy functions to mock and restore functionality during testing. Below is a detailed explanation of each part:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"let spy: jest.SpyInstance;"})}),(0,t.jsx)(n.br,{}),"\n","Declares a variable ",(0,t.jsx)(n.code,{children:"spy"})," to hold the spy instance. This ensures the spy can be accessed and restored later in the test lifecycle."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"beforeEach(() => { ... });"})}),(0,t.jsx)(n.br,{}),"\n","Defines a setup function that runs before each test case. Inside this block:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"jest.spyOn"}),": Creates a spy for the ",(0,t.jsx)(n.code,{children:"someMethod"})," method of the ",(0,t.jsx)(n.code,{children:"someModule"})," object."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:".mockImplementation"}),": Temporarily replaces the original implementation with the ",(0,t.jsx)(n.code,{children:"defaultValue"})," function for controlled testing."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"afterEach(() => { ... });"})}),(0,t.jsx)(n.br,{}),"\n","Defines a cleanup function that runs after each test case. It calls ",(0,t.jsx)(n.code,{children:"spy.mockRestore()"})," to:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Remove the mocked implementation."}),"\n",(0,t.jsx)(n.li,{children:"Restore the original method behavior, ensuring no side effects persist between test cases."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"benefits",children:"Benefits"}),"\n",(0,t.jsxs)(n.p,{children:["Using this approach ensures isolation between tests and prevents unintended interactions with the original implementation of ",(0,t.jsx)(n.code,{children:"someMethod"}),". It is particularly useful for testing code that depends on specific configurations or behaviors provided by the mocked method."]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var t=s(6540);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);