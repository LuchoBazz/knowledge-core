"use strict";(self.webpackChunkknowledge_core=self.webpackChunkknowledge_core||[]).push([[8875],{5441:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var s=n(4848),i=n(8453);const o={sidebar_position:1,title:"Github Actions Cron Jobs",sidebar_label:"Github Actions"},a=void 0,r={id:"essential-dev-utils/cron-jobs/github_actions",title:"Github Actions Cron Jobs",description:"Auto Slack Status Set for Lunch",source:"@site/docs/essential-dev-utils/cron-jobs/github_actions.md",sourceDirName:"essential-dev-utils/cron-jobs",slug:"/essential-dev-utils/cron-jobs/github_actions",permalink:"/knowledge-core/docs/essential-dev-utils/cron-jobs/github_actions",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/essential-dev-utils/cron-jobs/github_actions.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Github Actions Cron Jobs",sidebar_label:"Github Actions"},sidebar:"tutorialSidebar",previous:{title:"Cron Jobs",permalink:"/knowledge-core/docs/category/cron-jobs"},next:{title:"Prompt Engineering",permalink:"/knowledge-core/docs/category/prompt-engineering"}},c={},l=[{value:"Auto Slack Status Set for Lunch",id:"auto-slack-status-set-for-lunch",level:2},{value:"Explanation",id:"explanation",level:3},{value:"Note",id:"note",level:3}];function u(e){const t={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"auto-slack-status-set-for-lunch",children:"Auto Slack Status Set for Lunch"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:'name: Auto Slack Status Set Lunch\n\non:\n  schedule:\n    # Runs at 12:30 AM from Monday to Friday\n    - cron: \'30 17 * * 1-5\'\n\njobs:\n  update-slack-status:\n    runs-on: ubuntu-latest\n\n    container:\n      image: alpine/curl:latest\n\n    steps:\n    - name: Update Slack status using curl\n      run: |\n        current_time=$(date +%s)  # Get the current timestamp\n        expiration_time=$((current_time + 3600))  # Expires in 1 hour (3600 seconds)\n        \n        curl --silent --output /dev/null -X POST https://slack.com/api/users.profile.set \\\n        -H "Content-Type: application/json" \\\n        -H "Authorization: Bearer ${{ secrets.INSTALEAP_SLACK_TOKEN }}" \\\n        -d \'{\n          "profile": {\n            "status_text": "Lunch",\n            "status_emoji": ":avocado:",\n            "status_expiration": \'"$expiration_time"\'\n          }\n        }\'\n'})}),"\n",(0,s.jsx)(t.h3,{id:"explanation",children:"Explanation"}),"\n",(0,s.jsx)(t.p,{children:"This configuration automates the setting of a Slack status to indicate that the user is on lunch. Below is a detailed breakdown of the key components:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"name: Auto Slack Status Set Lunch"}),": Defines the name of the workflow for clarity and organization."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"on: schedule"}),": Specifies the trigger for the workflow based on a cron schedule."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"cron: '30 17 * * 1-5'"}),": Indicates that the workflow runs at 12:30 AM from Monday to Friday."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"jobs: update-slack-status"}),": Defines a job named ",(0,s.jsx)(t.code,{children:"update-slack-status"}),", which contains all steps necessary for executing the status update."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"runs-on: ubuntu-latest"}),": Specifies the environment in which the job runs."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"container: image: alpine/curl:latest"}),": Uses an Alpine container image with ",(0,s.jsx)(t.code,{children:"curl"})," installed to perform HTTP requests."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"steps"}),": Lists the individual steps that will be executed in the job."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"- name: Update Slack status using curl"}),": The name of the step indicating that it updates the Slack status."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"current_time=$(date +%s)"}),": Retrieves the current timestamp."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"expiration_time=$((current_time + 3600))"}),": Calculates an expiration time for the status that is set to expire in one hour (3600 seconds)."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"curl --silent --output /dev/null -X POST ..."}),": Sends a POST request to the Slack API to update the user\u2019s profile with the specified status, including status text, emoji, and expiration."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"note",children:"Note"}),"\n",(0,s.jsx)(t.p,{children:"Please be aware that this cron job configuration only functions for cron jobs that repeat at intervals greater than 15 minutes, in accordance with GitHub's policies."})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var s=n(6540);const i={},o=s.createContext(i);function a(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);